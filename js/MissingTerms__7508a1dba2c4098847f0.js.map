{"version":3,"sources":["./src/ui/MissingTerm/MissingTerms.ts","./sass/_MissingTerms.scss"],"names":[],"mappings":"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","file":"MissingTerms__7508a1dba2c4098847f0.js","sourcesContent":["import 'styling/_MissingTerms';\nimport { $$, Initialization, l } from '../../Core';\nimport { exportGlobally } from '../../GlobalExports';\nimport { IQueryResult } from '../../rest/QueryResult';\nimport { Dom } from '../../utils/Dom';\nimport { analyticsActionCauseList, IAnalyticsMissingTerm } from '../Analytics/AnalyticsActionListMeta';\nimport { Component } from '../Base/Component';\nimport { IComponentBindings } from '../Base/ComponentBindings';\nimport { ComponentOptions } from '../Base/ComponentOptions';\nimport { MissingTermManager } from './MissingTermManager';\nimport XRegExp = require('xregexp');\n\nexport interface IMissingTermsOptions {\n  caption?: string;\n  clickable?: boolean;\n  numberOfTerms?: number;\n}\n\n/**\n * This [result template component](https://docs.coveo.com/en/513/#using-result-template-components) renders a list of query terms\n * that were not matched by the associated result item.\n *\n * @availablesince [July 2019 Release (v2.6459)](https://docs.coveo.com/en/2938/)\n */\nexport class MissingTerms extends Component {\n  static ID = 'MissingTerms';\n\n  /**\n   * @componentOptions\n   */\n  static options: IMissingTermsOptions = {\n    /**\n     * Whether to allow the end-user to click a missing term to filter out items that do not match this term.\n     *\n     * **Default:** `true`\n     */\n    clickable: ComponentOptions.buildBooleanOption({ defaultValue: true }),\n    /**\n     * The text to display before missing terms.\n     *\n     * **Default:** The localized string for `Missing`.\n     */\n    caption: ComponentOptions.buildLocalizedStringOption({\n      localizedString: () => l('Missing')\n    }),\n    /**\n     * The maximum number of missing term to be displayed\n     *\n     * **Default:** `5`\u001d\u001c\n     * **Minimum value:** `1`\u001d\u001c\n     */\n    numberOfTerms: ComponentOptions.buildNumberOption({\n      defaultValue: 5,\n      min: 1\n    })\n  };\n\n  static doExport = () => {\n    exportGlobally({\n      MissingTerms: MissingTerms\n    });\n  };\n\n  private termForcedToAppear: string[];\n\n  /**\n   * Creates a new `MissingTerms` component instance.\n   * @param element The element on which to instantiate the component.\n   * @param options The configuration options for the component.\n   * @param bindings The bindings required by the component to function normally. If not set, these will be automatically resolved (with a slower execution time).\n   * @param result The query result item to associate the component with.\n   */\n  constructor(\n    public element: HTMLElement,\n    public options?: IMissingTermsOptions,\n    bindings?: IComponentBindings,\n    public result?: IQueryResult\n  ) {\n    super(element, MissingTerms.ID, bindings);\n\n    this.options = ComponentOptions.initComponentOptions(element, MissingTerms, options);\n    this.addMissingTerms();\n  }\n  /**\n   *Returns all original basic query expression terms that were not matched by the result item the component instance is associated with.\n   */\n  public get missingTerms(): string[] {\n    const terms = [];\n\n    for (const term of this.result.absentTerms) {\n      const regex = this.createWordBoundaryDelimitedRegex(term);\n      const query = this.queryStateModel.get('q');\n      const result = regex.exec(query);\n\n      if (result) {\n        const originalKeywordInQuery = result[4];\n        terms.push(originalKeywordInQuery);\n      }\n    }\n\n    return terms;\n  }\n\n  /**\n   * Injects a term in the advanced part of the query expression (aq) to filter out items that do not match the term.\n   * @param term The term to add to the advanced query expression.\n   */\n  public addTermForcedToAppear(term: string) {\n    if (this.missingTerms.indexOf(term) === -1) {\n      this.logger.warn(\n        `Method execution aborted because the term to inject in aq (\"${term}\") is not a missing term.`,\n        `Allowed missing terms: ${this.missingTerms.toString()}.`\n      );\n      return;\n    }\n    this.updateTermForcedToAppear();\n    this.termForcedToAppear.push(term);\n    this.queryStateModel.set('missingTerms', [...this.termForcedToAppear]);\n  }\n\n  private updateTermForcedToAppear() {\n    this.termForcedToAppear = [...this.queryStateModel.get('missingTerms')];\n  }\n\n  private addMissingTerms() {\n    if (this.missingTerms.length === 0) {\n      return;\n    }\n    const missingTermElement = this.buildContainer();\n    if (missingTermElement.length > 1) {\n      this.hideMissingTermsOverTheNumberOfResults(missingTermElement);\n      missingTermElement.map(element => {\n        $$(this.element).append(element);\n      });\n    }\n  }\n\n  private buildContainer(): HTMLElement[] {\n    const elements: HTMLElement[] = [];\n    elements.push(this.buildCaption().el);\n    this.buildMissingTerms().forEach(term => {\n      if (term) {\n        elements.push(term.el);\n      }\n    });\n    return elements;\n  }\n\n  private buildCaption(): Dom {\n    return $$('span', { className: 'coveo-field-caption' }, this.options.caption);\n  }\n\n  private buildMissingTerms(): Dom[] {\n    const validTerms = this.missingTerms.filter(term => this.isValidTerm(term));\n    const terms: Dom[] = validTerms.map(term => {\n      return this.makeTermClickableIfEnabled(term);\n    });\n    return terms;\n  }\n\n  private executeNewQuery(missingTerm: string = this.queryStateModel.get('q')) {\n    this.queryController.executeQuery();\n  }\n\n  private makeTermClickableIfEnabled(term: string): Dom {\n    if (this.options.clickable) {\n      const termElement = $$('button', { className: 'coveo-missing-term coveo-clickable' }, term);\n      termElement.on('click', () => {\n        this.addTermForcedToAppear(term);\n        this.logAnalyticsAddMissingTerm(term);\n        this.executeNewQuery(term);\n      });\n      return termElement;\n    } else {\n      return $$('span', { className: 'coveo-missing-term' }, term);\n    }\n  }\n\n  private createWordBoundaryDelimitedRegex(term: string): RegExp {\n    return XRegExp(`${MissingTermManager.wordBoundary}(${term})${MissingTermManager.wordBoundary}`, 'gi');\n  }\n\n  private containsFeaturedResults(term: string): boolean {\n    this.updateTermForcedToAppear();\n    return this.termForcedToAppear.indexOf(term) !== -1;\n  }\n\n  private hideMissingTermsOverTheNumberOfResults(elements: HTMLElement[]) {\n    const allMissingTerms = elements.filter(element => {\n      return element.tagName === 'BUTTON';\n    });\n    if (allMissingTerms.length <= this.options.numberOfTerms) {\n      return;\n    }\n    for (let index = this.options.numberOfTerms; index < allMissingTerms.length; index++) {\n      $$(allMissingTerms[index]).hide();\n    }\n    const nbMoreResults = allMissingTerms.length - this.options.numberOfTerms;\n    const showMore = $$('button', { className: 'coveo-missing-term-show-more coveo-clickable' }, l('NMore', [nbMoreResults]));\n\n    showMore.on('click', () => {\n      this.showAllHiddenMissingTerms();\n    });\n    elements.push(showMore.el);\n  }\n\n  private showAllHiddenMissingTerms() {\n    const showMore = $$(this.element).find('.coveo-missing-term-show-more');\n    showMore.parentNode.removeChild(showMore);\n    const allMissingTerms = $$(this.element).findAll('.coveo-missing-term');\n    for (let index = this.options.numberOfTerms; index < allMissingTerms.length; index++) {\n      $$(allMissingTerms[index]).show();\n      allMissingTerms[index].removeAttribute('style');\n    }\n  }\n\n  private isValidTerm(term: string) {\n    return this.isNonBoundaryTerm(term) && !this.containsFeaturedResults(term);\n  }\n\n  private isNonBoundaryTerm(term: string) {\n    //p{L} is a Unicode script that matches any character in any language.\n    const wordWithBreakpoints = `\\\\p{L}*[-'?\\*’.~=,\\/\\\\\\\\:\\`;_!&\\(\\)]+\\\\p{L}*`;\n    const regex = XRegExp(wordWithBreakpoints, 'gi');\n    const query = this.queryStateModel.get('q');\n    const matches = query.match(regex) || [];\n    return matches.every((word: string) => {\n      return word.indexOf(term) === -1;\n    });\n  }\n\n  private logAnalyticsAddMissingTerm(term: string) {\n    this.usageAnalytics.logSearchEvent<IAnalyticsMissingTerm>(analyticsActionCauseList.addMissingTerm, {\n      missingTerm: term\n    });\n  }\n}\nInitialization.registerAutoCreateComponent(MissingTerms);\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/MissingTerm/MissingTerms.ts","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./sass/_MissingTerms.scss\n// module id = 693\n// module chunks = 68 88"],"sourceRoot":""}